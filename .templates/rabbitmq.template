# v rabbitmq
RUN wget -O /tmp/${RABBITMQ_DEB_ARTIFACT} ${RABBITMQ_DEB_DOWNLOAD_URL} && \
    ${SYSTEM_UPDATE} && \
    ${PKG_INSTALL} erlang-nox socat && \
    dpkg -i /tmp/${RABBITMQ_DEB_ARTIFACT} && \
    ${SYSTEM_CLEANUP} && \
    rm -f /tmp/${RABBITMQ_DEB_ARTIFACT} && \
    rabbitmq-plugins enable --offline rabbitmq_management && \
    for p in ${RABBITMQ_PLUGINS}; do \
      rabbitmq-plugins enable rabbitmq_${p} --offline; \
    done && \
    mkdir -p /backup/rabbitmq/data /data ${SERVICE_USER_HOME}/data ${SERVICE_USER_HOME}/backup/rabbitmq/data/mnesia && \
    mv /var/lib/rabbitmq/mnesia /backup/rabbitmq/data && \
    ln -s /backup/rabbitmq/data/mnesia /var/lib/rabbitmq/mnesia && \
    ln -s /backup/rabbitmq/data/mnesia /data/mnesia && \
    mv /var/log/rabbitmq /data/log && \
    ln -s /data/log /var/log/rabbitmq && \
    chown -R ${SERVICE_USER}:${SERVICE_GROUP} /data && \
    echo '[{rabbit, [{' >> /etc/rabbitmq/rabbitmq.config && \
    echo '    loopback_users, []' >> /etc/rabbitmq/rabbitmq.config && \
    echo '  }]}].' >> /etc/rabbitmq/rabbitmq.config && \
    echo '  ${SERVICE_USER}  -   nofiles ${RABBITMQ_ULIMIT_N}' >> /etc/security/limits.conf


#RUN wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb && \
#    sudo dpkg -i erlang-solutions_1.0_all.deb && \
#    ${SYSTEM_UPDATE} && \
#    ${PKG_INSTALL} --force-yes rabbitmq-server && \
#    ${SYSTEM_CLEANUP}

# Define mount points.
VOLUME ["/backup/rabbitmq/data/mnesia"]

# wget -qO - https://www.rabbitmq.com/rabbitmq-signing-key-public.asc | apt-key add - && \
#    echo "deb http://www.rabbitmq.com/debian/ testing main" > /etc/apt/sources.list.d/rabbitmq.list && \
#    ${SYSTEM_UPDATE} && \
#    ${PKG_INSTALL} --update --force-yes rabbitmq-server && \
#    ${SYSTEM_CLEANUP}

# Expose ports.
EXPOSE 5672 15672 5671 5672 5671 4369 25672 1883 8883 61613 61614
# ^ rabbitmq
