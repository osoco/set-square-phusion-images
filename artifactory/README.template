This image runs Artifactory ${ARTIFACTORY_VERSION}
within a Tomcat instance.

You can customize how Artifactory logs are processed
by providing a Logstash config file (overriding
/etc/logstash/conf.d/tomcat.conf)

Examples:

- Running an instance with a data container, with nginx-proxy up front.
> docker run -d --name ${ARTIFACTORY_DEFAULT_VIRTUAL_HOST} --rm --volumes-from artifactory-data ${NAMESPACE}/${IMAGE}:${TAG}

- Running an instance:
> docker run -d -p [port]:8082 --name ${ARTIFACTORY_DEFAULT_VIRTUAL_HOST} -v [my-data-folder]:/backup/${IMAGE}/data -v [my-db-folder]:/backup/${IMAGE}/db -v [my-security-folder]:/backup/${IMAGE}/security ${NAMESPACE}/${IMAGE}:${TAG}

- Running Artifactory with specific Logstash configuration:
> docker run -d -p [port]:8080 -v [my-logstash-config]:/etc/logstash/conf.d/tomcat.conf --name ${ARTIFACTORY_DEFAULT_VIRTUAL_HOST} ${NAMESPACE}/${IMAGE}:${TAG}

- Running Artifactory disabling Logstash altogether:
> docker run .. -e ENABLE_LOGSTASH=false ..

- Running Artifactory disabling Monit checks:
> docker run .. -e ENABLE_MONIT=false ..

- Running Artifactory disabling cron jobs:
> docker run .. -e ENABLE_CRON=false ..

- Running Artifactory disabling backup for Artifactory configuration:
> docker run .. -e ENABLE_RSNAPSHOT=false ..