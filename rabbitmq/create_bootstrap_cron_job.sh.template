#!/bin/env dry-wit
# Copyright 2016-today Automated Computing Machinery
# Licensed under GPLv3.

# Prints how to use this script.
## dry-wit hook
function usage() {
  cat <<EOF
$SCRIPT_NAME [-v[v]|-q]
$SCRIPT_NAME [-h|--help]
(c) 2016-today Automated Computing Machinery

Checks the container is launched with the required runtime parameters.

Common flags:
    * -h | --help: Display this message.
    * -v: Increase the verbosity.
    * -vv: Increase the verbosity further.
    * -q | --quiet: Be silent.
EOF
}

# Error messages
function defineErrors() {
  addError INVALID_OPTION "Unknown option";
}

## Parses the input
## dry-wit hook
function parseInput() {

  local _flags=$(extractFlags $@);
  local _flagCount=0;
  local _currentCount;
  local _help=${FALSE};

  # Flags
  for _flag in ${_flags}; do
    _flagCount=$((_flagCount+1));
    case ${_flag} in
      -h | --help)
        _help=${TRUE};
        shift;
        ;;
      -v | -vv | -q | --quiet)
        shift;
        ;;
      --)
        shift;
        break;
        ;;
    esac
  done
}

## Checking input
## dry-wit hook
function checkInput() {

  local _flags=$(extractFlags $@);
  local _flagCount;
  local _currentCount;
  local _oldIfs;

  logDebug -n "Checking input";

  # Flags
  for _flag in ${_flags}; do
    _flagCount=$((_flagCount+1));
    case ${_flag} in
      -h | --help | -v | -vv | -q | --quiet)
      ;;
      --)
        break;
        ;;
      *) logDebugResult FAILURE "fail";
         exitWithErrorCode INVALID_OPTION ${_flag};
         ;;
    esac
  done

  logDebugResult SUCCESS "valid";
}

## Main logic
## dry-wit hook
function main() {

  if [ -e /usr/local/bin/${IMAGE}-bootstrap.sh ]; then
      cat <<EOF > /etc/cron.d/${IMAGE}-bootstrap
PATH=/bin:/usr/bin:/usr/sbin:/usr/local/bin

1/* * * * * root /usr/local/bin/${IMAGE}-bootstrap.sh && rm -f /etc/cron.d/${IMAGE}-bootstrap
EOF
  fi
}


